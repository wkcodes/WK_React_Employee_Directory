{"version":3,"sources":["App.js","components/TableHeader.js","components/SortedTable.js","components/TableBody.js","reportWebVitals.js","index.js"],"names":["finalTable","TableHeader","Component","SortedTable","this","props","users","map","user","className","id","name","email","city","TableBody","App","state","us","sorted","filtered","sortHandler","setState","sort","a","b","nameA","nameB","handlerHelper","filterHandler","tableFilter","allUsers","usUsers","i","length","push","tempUsers","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.668ddc97.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport TableHeader from \"./components/TableHeader\";\nimport SortedTable from \"./components/SortedTable\";\nimport TableBody from \"./components/TableBody\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nlet finalTable;\n\nclass App extends Component {\n  state = {\n    users: [\n      {\n        id: 1,\n        name: \"Bob\",\n        email: \"bob@gmail.com\",\n        city: \"Seattle\",\n        us: true,\n      },\n      {\n        id: 2,\n        name: \"Kristen\",\n        email: \"kristen@gmail.com\",\n        city: \"New York\",\n        us: true,\n      },\n      {\n        id: 3,\n        name: \"Hans\",\n        email: \"hans@gmail.com\",\n        city: \"Berlin\",\n        us: false,\n      },\n      {\n        id: 4,\n        name: \"Sofia\",\n        email: \"sofia@gmail.com\",\n        city: \"Barcelona\",\n        us: false,\n      },\n      {\n        id: 5,\n        name: \"Zach\",\n        email: \"zach@gmail.com\",\n        city: \"Portland\",\n        us: true,\n      },\n      {\n        id: 6,\n        name: \"Amelia\",\n        email: \"amelia@gmail.com\",\n        city: \"London\",\n        us: false,\n      },\n      {\n        id: 7,\n        name: \"Mikhail\",\n        email: \"mikhail@gmail.com\",\n        city: \"Moscow\",\n        us: false,\n      },\n    ],\n    sorted: false,\n    filtered: false,\n  };\n\n  sortHandler = () => {\n    //sets sorted attribute to true\n    this.setState({ sorted: true });\n    //sorts user array by first letter of name\n    this.state.users.sort(function (a, b) {\n      let nameA = a.name;\n      let nameB = b.name;\n      if (nameA > nameB) {\n        return -a;\n      }\n      if (nameA < nameB) {\n        return -1;\n      }\n      return 0;\n    });\n  };\n\n  handlerHelper = () => {\n    return;\n  };\n\n  filterHandler = () => {\n    //sets filtered attribute to true\n    this.setState({ filtered: true });\n    //filters out non-us users\n    this.tableFilter()\n    finalTable = <SortedTable></SortedTable>;\n  };\n\n  tableFilter = (users) => {\n    let allUsers = this.state.users;\n    let usUsers = [];\n    for(let i =0; i < allUsers.length; i++){\n      if(allUsers[i].us){\n        usUsers.push(allUsers[i])\n      } \n    }\n    return usUsers;\n  }\n\n  render() {\n    if(this.state.filtered){\n      let tempUsers = this.tableFilter(this.state.users);\n      finalTable = <SortedTable users={tempUsers}></SortedTable>;\n    }else{\n    finalTable = <TableBody users={this.state.users}></TableBody>;\n    }\n    return (\n      <div className=\"center\">\n        <h1>Employee Directory powered by React!</h1>\n        <button onClick={this.sortHandler}>\n          Sort employees alphabetically\n        </button>\n        <button onClick={this.filterHandler}>Only show U.S. employees</button>\n        <TableHeader></TableHeader>\n        <table>{finalTable}</table>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\n\nexport default class TableHeader extends Component {\n  render() {\n    return (\n        <table>\n          <thead>\n            <tr>\n              <th>Name - </th>\n              <th> Email - </th>\n              <th> City </th>\n            </tr>\n          </thead>\n        </table>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nclass SortedTable extends Component {\n    \n  render() {\n    return this.props.users.map((user) => (\n      <table key={user.id} className=\"table table-bordered\">\n        <tbody>\n          <tr>\n            <td id=\"name\" className=\"align-middle\">\n              {user.name}\n            </td>\n            <td id=\"email\" className=\"align-middle\">\n              {user.email}\n            </td>\n            <td id=\"city\" className=\"align-middle\">\n              {user.city}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    ));\n  }\n}\n\nexport default SortedTable;\n","import React, { Component } from \"react\";\n\nclass TableBody extends Component {\n\n  render() {\n\n    return this.props.users.map((user) => (\n      <table key={user.id} className=\"table table-bordered\">\n        <tbody>\n          <tr>\n            <td id=\"name\" className=\"align-middle\">\n              {user.name}\n            </td>\n            <td id=\"email\" className=\"align-middle\">\n              {user.email}\n            </td>\n            <td id=\"city\" className=\"align-middle\">\n              {user.city}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    ));\n  }\n}\n \nexport default TableBody;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}